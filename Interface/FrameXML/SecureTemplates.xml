<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
UI_shared.xsd">
    <!-- A base template for secure frames -->
    <Frame name="SecureFrameTemplate" protected="true" virtual="true"/>

    <!-- A variant of SecureFrameTemplate that will propagate all attribute queries to the parent -->
    <Frame name="SecureFrameParentPropagationTemplate" inherits="SecureFrameTemplate" virtual="true">
		<Attributes>
			<Attribute name="useparent*" type="boolean" value="true"/>
		</Attributes>
	</Frame>

    <Script file="SecureTemplates.lua"/>
    <Script file="SecureStateDriver.lua"/>
    <Script file="SecureHoverDriver.lua"/>

    <!-- A button template for click-cast style action buttons -->
    <Button name="SecureActionButtonTemplate" inherits="SecureFrameTemplate" mixin="SecureActionButtonMixin" virtual="true">
        <Scripts>
			<!-- SecureActionButton_OnClick takes two extra custom arguments. Our usage of this template will always override this
				and supply the extra arguments, and for now AddOns won't be able to have isKeyPress or isSecureAction set. -->
            <OnClick function="SecureActionButton_OnClick"/>
        </Scripts>
    </Button>

	<!-- A template that can perform secure actions outside of combat -->
	<Button name="InsecureActionButtonTemplate" virtual="true">
		<Scripts>
			<!-- For now AddOns won't be able to have isKeyPress or isSecureAction set. -->
			<OnClick> if not InCombatLockdown() then SecureActionButton_OnClick(self, button, down); end </OnClick>
		</Scripts>
	</Button>

    <!-- A variant of SecureActionButtonTemplate used for unit buttons -->
    <Button name="SecureUnitButtonTemplate" inherits="SecureFrameTemplate" virtual="true">
        <Scripts>
            <OnClick function="SecureUnitButton_OnClick"/>
        </Scripts>
    </Button>
</Ui>
